version: 2

jobs:
  build_docker:
    machine: true
    working_directory: /tmp/build
    steps:
      - checkout
      - setup_remote_docker
          docker_layer_caching: true
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      - run: |
          TAG=1.1.$CIRCLE_BUILD_NUM
          docker build -t akeinhell/redfoxbot:$TAG .
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push akeinhell/redfoxbot:$TAG
  build:
    docker:
      - image: akeinhell/docker-nginx-php7.1:latest
        environment:
          - DB_HOST=localhost
          - DB_CONNECTION=pgsql
          - DB_DATABASE=test
          - DB_USERNAME=test
          - DB_PASSWORD=test
      - image: postgres:9.5
        environment:
        - POSTGRES_PASSWORD=test
        - POSTGRES_DB=test
        - POSTGRES_USER=test
    working_directory: /tmp/laravel
    steps:
      - checkout
      - run: composer self-update
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.json" }}
      - run: composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "composer.json" }}
          paths:
            - vendor
      - run: php artisan migrate --force
      - run: ./vendor/bin/phpunit --coverage-text
      - store_test_results:
          path: ./report/junit/
      - run: composer require satooshi/php-coveralls
      - run: php vendor/bin/codacycoverage clover ./report/clover/coverage.xml
      - run: php ocular.phar code-coverage:upload --access-token="74c5df6993414b945a394c9304cce0ace56592b6fb5bad1d10c646ee293015e7" --format=php-clover build/logs/clover.xml
      - run: bash <(curl -s https://codecov.io/bash)
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              ./vendor/bin/dep deploy
            else
              echo "Only master branc build"
            fi

workflows:
  version: 2
  build_and_test:
      jobs:
        - build
        - build_docker

